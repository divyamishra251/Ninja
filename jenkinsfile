// Expose parameter for Multibranch or Pipeline
properties([
  parameters([
    choice(
      name: 'action',
      choices: ['apply', 'destroy'],
      description: 'Select the action to perform'
    )
  ])
])

pipeline {
    agent any

    stages {

        stage('Checkout Repository') {
            steps {
                git url: 'https://github.com/divyamishra251/Ninja.git', branch: 'main'
            }
        }

        stage('Terraform & Ansible') {divya@ideapad2510:~/one_click_infra$ ls
ansiblerole  Infra_setup  jenkinsfile
divya@ideapad2510:~/one_click_infra$ cd Infra_setup/
divya@ideapad2510:~/one_click_infra/Infra_setup$ sl
Command 'sl' not found, but can be installed with:
sudo apt install sl
divya@ideapad2510:~/one_click_infra/Infra_setup$ ls
terraform-postgresql-modules
divya@ideapad2510:~/one_click_infra/Infra_setup$ cd terraform-postgresql-modules/
divya@ideapad2510:~/one_click_infra/Infra_setup/terraform-postgresql-modules$ ls
main.tf  modules  outputs.tf  variables.tf
divya@ideapad2510:~/one_click_infra/Infra_setup/terraform-postgresql-modules$ 
            steps {
                // Inject AWS credentials
                withCredentials([
                    string(credentialsId: 'AWS_ACCESS_KEY_ID', variable: 'AWS_ACCESS_KEY_ID'),
                    string(credentialsId: 'AWS_SECRET_ACCESS_KEY', variable: 'AWS_SECRET_ACCESS_KEY')
                ]) {
                    script {
                        // Terraform operations
                        dir('Infra_setup/terraform-postgresql-modules') {
                            sh '''
                                terraform init
                                terraform validate
                                terraform plan
                                terraform ${params.action} --auto-approve
                            '''
                        }

                        // Wait and run Ansible if action is apply
                        if (params.action == 'apply') {
                            echo 'Waiting 30s for EC2 instances to be ready...'
                            sleep time: 30, unit: 'SECONDS'

                            dir('ansiblerole') {
                                sh '''
                                    ansible-inventory -i aws_ec2_postgres.aws_ec2.yaml --graph
                                    ansible-playbook -i aws_ec2_postgres.aws_ec2.yaml playbook.yml
                                '''
                            }
                        }
                    }
                }
            }
        }
    }
}
